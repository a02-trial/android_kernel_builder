#!/usr/bin/env bash
set -e

# Load environment
source config.env

# Clean output folder
rm -rf out
mkdir -p out

# Export ARCH environment
export ARCH=arm64
export SUBARCH=arm64

# Export Clang path
export CLANG_PATH=$CLANG_DIR/bin
export PATH=$CLANG_PATH:$PATH

export CROSS_COMPILE=$CLANG_PATH/$CROSS_COMPILE
export CROSS_COMPILE_ARM32=$CLANG_PATH/$CROSS_COMPILE_ARM32

# Optional: show Clang version
clang --version || echo "Clang not found"

# Start kernel build
make -j$(nproc) O=out $KERNEL_CONFIG
make -j$(nproc) O=out $BUILD_ARGS

# Copy Image to AnyKernel3
IMAGE_PATH="out/arch/arm64/boot/${OUTPUT_IMAGE_NAME}"
if [[ -f "$IMAGE_PATH" ]]; then
  cp "$IMAGE_PATH" "$ANYKERNEL_DIR/"
  echo "Kernel built successfully: ${OUTPUT_IMAGE_NAME}"
else
  echo "Build failed: ${OUTPUT_IMAGE_NAME} not found!"
  exit 1
fi

# ZIP packing
if [[ "$PACK_KERNEL" == "true" ]]; then
  cd "$ANYKERNEL_DIR"
  zip -r9 "${DEVICE_CODENAME}-${BUILD_VARIANT}-Kernel.zip" * > /dev/null
  echo "ZIP packed: ${DEVICE_CODENAME}-${BUILD_VARIANT}-Kernel.zip"
fi
